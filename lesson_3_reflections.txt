When would you want to use a remote repository rather than keeping all your work local?

If I want to be able to edit the project on more than one computer or to have other people on other computers contribute to my project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I imagine that like most things that are done manually in Git manual pushes and pulls allow for greater controll by the user. If I'm working on something locally that isn't complete yet I don't want it to automatically push. This could be very confusing to others who are working on the same project and could break the code.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is when you make a remote copy of someone else's remote repository. Cloning is making a local copy of a remote repository. Branching is practically unrelated to cloning and forking. It's used if you want to take a project down a new path to test experimental or long term features without disrupting the main project.

What is the benefit of having a copy of the last known state of the remote stored locally?

This way I can tell if my local copy is ahead (because I've made changes) of the remote copy. I know that I may face merge conflicts the next time I do a pull request.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If I were to collaborate without GitHub or some other version control system it would make things a lot harder overall. While GitHub does force you to remember a bunch of commands and structure it allows you to communicate by example. Rather than try to convince a team mate that I have a good idea and can pull it off I can just show them exactly what I mean. Without GitHub even if I went through the bother of doing this they would then have to decide if my changes were worth the extra work of manually merging the chanes into their files.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

I would want to do that if I need or want to get approval from another member before having my changes merged into master. This allows another set of eyes to help ensure I haven't added anything which might damage the master branch.